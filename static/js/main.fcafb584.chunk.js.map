{"version":3,"sources":["components/MedalCount.js","components/MedalItem.js","App.js","reportWebVitals.js","index.js"],"names":["MedalCount","color","count","increment","decrement","className","onClick","style","backgroundColor","colors","MedalItem","name","Badge","badgeContent","reduce","a","b","map","c","i","countries","App","state","this","push","setState","country","medal","Container","maxWidth","addMedal","bind","removeMedal","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gWAceA,EAVE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACzC,OACI,sBAAKC,UAAU,oBAAf,UACI,cAAC,IAAD,CAAkBC,QAASF,IAC3B,qBAAKC,UAAU,oBAAoBE,MAAO,CAAEC,gBAAiBP,GAA7D,SAAsE,4BAAIC,MAC1E,cAAC,IAAD,CAAeI,QAASH,Q,QCLhCM,EAAS,CACT,UACA,UACA,WAuBWC,EApBC,SAAC,GAA2C,IAAzCC,EAAwC,EAAxCA,KAAMT,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UACvC,OACI,gCACI,oBAAGC,UAAU,eAAb,UAA6BM,EAAK,cAACC,EAAA,EAAD,CAAQC,aAAcX,EAAMY,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAAIf,MAAM,eAE5FQ,EAAOQ,KAAI,SAACC,EAAGC,GAAJ,OACP,cAAC,EAAD,CACIlB,MAAOiB,EACPhB,MAAOA,EAAMiB,GAGbhB,UAAW,kBAAMA,EAAUgB,IAC3Bf,UAAW,kBAAMA,EAAUe,KAHtBA,UCbzBC,EAAY,CACd,gBACA,QACA,SACA,UACA,SACA,SAGmBC,E,4MACjBC,MAAQ,CACJF,UAAWA,EAAUH,KAAI,SAACC,GAAQ,MAAO,CAAEP,KAAMO,EAAGhB,MAAO,CAAE,EAAG,EAAG,Q,gDAGvE,SAAWS,GACP,IAAMS,EAAcG,KAAKD,MAAnBF,UACNA,EAAUI,KAAK,CAAEb,KAAMA,EAAMT,MAAO,CAAE,EAAG,EAAG,KAC5CqB,KAAKE,SAAS,CAAEL,gB,sBAGpB,SAASM,EAASC,GACd,IAAMP,EAAcG,KAAKD,MAAnBF,UACNA,EAAUM,GAASxB,MAAMyB,IAAU,EACnCJ,KAAKE,SAAS,CAAEL,gB,yBAGpB,SAAYM,EAASC,GACjB,IAAMP,EAAcG,KAAKD,MAAnBF,UACNA,EAAUM,GAASxB,MAAMyB,IAAU,EAC/BP,EAAUM,GAASxB,MAAMyB,GAAS,IAAKP,EAAUM,GAASxB,MAAMyB,GAAS,GAC7EJ,KAAKE,SAAS,CAAEL,gB,oBAGpB,WAAU,IAAD,OACL,OACI,cAACQ,EAAA,EAAD,CAAWvB,UAAU,YAAYwB,SAAS,KAA1C,SAEQN,KAAKD,MAAMF,UAAUH,KAAI,SAACC,EAAGC,GAAJ,OACrB,cAAC,EAAD,CACIR,KAAMO,EAAEP,KACRT,MAAOgB,EAAEhB,MACTC,UAAW,EAAK2B,SAASC,KAAK,EAAMZ,GACpCf,UAAW,EAAK4B,YAAYD,KAAK,EAAMZ,IAClCA,Y,GAlCAc,aCHlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fcafb584.chunk.js","sourcesContent":["import './../css/MedalCount.css';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\nlet MedalCount = ({ color, count, increment, decrement }) => {\r\n    return (\r\n        <div className=\"medal-count-outer\">\r\n            <RemoveCircleIcon onClick={decrement} />\r\n            <div className=\"medal-count-inner\" style={{ backgroundColor: color }}><p>{count}</p></div>\r\n            <AddCircleIcon onClick={increment} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedalCount;\r\n\r\n// OLD //\r\n/*\r\nexport default class MedalCount extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"medal-count-outer\">\r\n                <RemoveCircleIcon onClick={this.props.decrement} />\r\n                <div className=\"medal-count-inner\" style={{ backgroundColor: this.props.color }}><p>{this.props.count}</p></div>\r\n                <AddCircleIcon onClick={this.props.increment} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n*/","import './../css/MedalItem.css';\r\nimport MedalCount from './MedalCount';\r\nimport { Badge } from '@material-ui/core';\r\n\r\nlet colors = [\r\n    '#ffd900',\r\n    '#c5cad9',\r\n    '#d9a36a',\r\n]\r\n\r\nlet MedalItem = ({ name, count, increment, decrement }) => {\r\n    return (\r\n        <div>\r\n            <p className=\"medal-header\">{name}<Badge  badgeContent={count.reduce((a, b) => a + b, 0)} color=\"primary\"/></p>\r\n            {\r\n                colors.map((c, i) =>\r\n                    <MedalCount\r\n                        color={c}\r\n                        count={count[i]}\r\n                        key={i}\r\n\r\n                        increment={() => increment(i)}\r\n                        decrement={() => decrement(i)}\r\n                    />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MedalItem;\r\n\r\n// OLD //\r\n/*export default class MedalItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { count: [ 0, 0, 0 ], name: props.name, total: 0 }\r\n    }\r\n\r\n    _set_count_by_index(i, c) {\r\n        let counts = this.state.count;\r\n        counts[i] = c;\r\n        this.setState({ count: counts, total: counts.reduce((a, b) => a + b, 0) });\r\n    }\r\n\r\n    _get_count_by_index(i) {\r\n        let counts = this.state.count;\r\n        return counts[i];\r\n    }\r\n\r\n    increment(i) { this._set_count_by_index(i, this._get_count_by_index(i) + 1) }\r\n    decrement(i) {\r\n        if (this._get_count_by_index(i) === 0) { return }\r\n        this._set_count_by_index(i, this._get_count_by_index(i) - 1);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p className=\"medal-header\">{this.state.name}<Badge badgeContent={this.state.total} color=\"primary\" /></p>\r\n                {\r\n                    types.map((t, i) =>\r\n                        <MedalCount\r\n                            color={t.color}\r\n                            count={this.state.count[i]}\r\n                            key={i}\r\n\r\n                            // .bind allows me pass the index of the medal into the functions arguments when it's called from this scope, rather from within MedalCount\r\n                            // MedalCount won't ever need to know what it's index is\r\n                            increment={this.increment.bind(this, i)}\r\n                            decrement={this.decrement.bind(this, i)}\r\n                        />\r\n                    )\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n*/\r\n","import './App.css';\r\n\r\nimport Container from '@material-ui/core/Container';\r\nimport MedalItem from './components/MedalItem';\r\nimport { Component } from 'react';\r\n\r\nlet countries = [\r\n  'United States',\r\n  'China',\r\n  'Russia',\r\n  'Germany',\r\n  'Brazil',\r\n  'Japan'\r\n]\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        countries: countries.map((c) => { return { name: c, count: [ 0, 0, 0 ] } })\r\n    }\r\n\r\n    addCountry(name) {\r\n        let { countries } = this.state;\r\n        countries.push({ name: name, count: [ 0, 0, 0 ] });\r\n        this.setState({ countries });\r\n    }\r\n\r\n    addMedal(country, medal) {\r\n        let { countries } = this.state;\r\n        countries[country].count[medal] += 1;\r\n        this.setState({ countries });\r\n    }\r\n\r\n    removeMedal(country, medal) {\r\n        let { countries } = this.state;\r\n        countries[country].count[medal] -= 1;\r\n        if (countries[country].count[medal] < 0) { countries[country].count[medal] = 0 }\r\n        this.setState({ countries });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"container\" maxWidth=\"sm\">\r\n                {\r\n                    this.state.countries.map((c, i) =>\r\n                        <MedalItem\r\n                            name={c.name}\r\n                            count={c.count}\r\n                            increment={this.addMedal.bind(this, i)}\r\n                            decrement={this.removeMedal.bind(this, i)}\r\n                            key={i}\r\n                        />\r\n                    )\r\n                }\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}